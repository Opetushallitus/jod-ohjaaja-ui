/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/profiili/ohjaaja': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['ohjaajaGet'];
    put: operations['ohjaajaUpdate'];
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/profiili/suosikit': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Finds all Ohjaaja's suosikit */
    get: operations['ohjaajanSuosikkiFindAll'];
    put?: never;
    /** Add a new Ohjaaja's suosikki */
    post: operations['ohjaajanSuosikkiAdd'];
    /** Delete an Ohjaaja's suosikki */
    delete: operations['ohjaajanSuosikkiDelete'];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/profiili/kiinnostukset': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Finds all Ohjaaja's kiinnostukset */
    get: operations['ohjaajanKiinnostusFindAll'];
    put?: never;
    /** Add a new Ohjaaja's kiinnostus */
    post: operations['ohjaajanKiinnostusAdd'];
    /** Delete an Ohjaaja's kiinnostus */
    delete: operations['ohjaajanKiinnostusDelete'];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/artikkeli/kommentit': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Finds all artikkelin kommentit */
    get: operations['artikkelinKommenttiFindAllArtikkelinKommentit'];
    put?: never;
    /** Creates a new artikkelin kommentti */
    post: operations['artikkelinKommenttiCreateArtikkelinKommentti'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/artikkeli/kommentit/{id}/ilmianto': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post: operations['artikkelinKommenttiIlmiannaKommentti'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/artikkeli/katselu/{artikkeliId}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Adds a Katselu to the Artikkeli */
    post: operations['artikkelinKatseluAdd'];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/profiili/ohjaaja/vienti': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get: operations['ohjaajaExport'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/artikkeli/viimeksi-katsellut': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Gets the last viewed article ids */
    get: operations['artikkelinKatseluGetMostRecentViewedArtikkeliIds'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/artikkeli/katselu/katsotuimmat': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /** Gets the most viewed article ids */
    get: operations['artikkelinKatseluGetMostViewedArtikkeliIds'];
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  '/api/artikkeli/kommentit/{id}': {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /** Deletes an artikkelin kommentti by ID */
    delete: operations['artikkelinKommenttiDeleteArtikkelinKommentti'];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    OhjaajaDto: {
      /** Format: uuid */
      id?: string;
      /** @enum {string} */
      tyoskentelyPaikka?:
        | 'PERUSASTE'
        | 'TOINEN_ASTE'
        | 'KORKEAKOULU'
        | 'AIKUISKOULUTUS'
        | 'TYOLLISYYSPALVELUT'
        | 'KOLMAS_SEKTORI'
        | 'YKSITYINEN'
        | 'MUU';
    };
    SuosikkiDto: {
      /** Format: uuid */
      readonly id?: string;
      /** Format: int64 */
      artikkeliId: number;
      /** Format: date-time */
      readonly luotu?: string;
    };
    KiinnostusDto: {
      /** Format: uuid */
      readonly id?: string;
      /** Format: int64 */
      asiasanaId?: number;
      /** Format: date-time */
      readonly luotu?: string;
    };
    ArtikkelinKommenttiDto: {
      /** Format: uuid */
      readonly id?: string;
      /** Format: int64 */
      artikkeliId: number;
      /** Format: uuid */
      readonly ohjaajaId?: string;
      kommentti: string;
      /** Format: date-time */
      readonly luotu?: string;
    };
    CsrfTokenDto: {
      token: string;
      headerName: string;
      parameterName: string;
    };
    OhjaajaCsrfDto: {
      /** Format: uuid */
      id?: string;
      etunimi?: string;
      sukunimi?: string;
      csrf: components['schemas']['CsrfTokenDto'];
      /** @enum {string} */
      tyoskentelyPaikka?:
        | 'PERUSASTE'
        | 'TOINEN_ASTE'
        | 'KORKEAKOULU'
        | 'AIKUISKOULUTUS'
        | 'TYOLLISYYSPALVELUT'
        | 'KOLMAS_SEKTORI'
        | 'YKSITYINEN'
        | 'MUU';
    };
    ArtikkelinKommenttiExportDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      luotu?: string;
      /** Format: int64 */
      artikkeliId?: number;
      kommentti?: string;
    };
    OhjaajaExportDto: {
      /** Format: uuid */
      id?: string;
      /** @enum {string} */
      tyoskentelyPaikka?:
        | 'PERUSASTE'
        | 'TOINEN_ASTE'
        | 'KORKEAKOULU'
        | 'AIKUISKOULUTUS'
        | 'TYOLLISYYSPALVELUT'
        | 'KOLMAS_SEKTORI'
        | 'YKSITYINEN'
        | 'MUU';
      suosikit?: components['schemas']['OhjaajanSuosikkiExportDto'][];
      kiinnostukset?: components['schemas']['OhjaajanKiinnostusExportDto'][];
      kommentit?: components['schemas']['ArtikkelinKommenttiExportDto'][];
    };
    OhjaajanKiinnostusExportDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      luotu?: string;
      /** Format: int64 */
      asiasanaId?: number;
    };
    OhjaajanSuosikkiExportDto: {
      /** Format: uuid */
      id?: string;
      /** Format: date-time */
      luotu?: string;
      /** Format: int64 */
      artikkeliId?: number;
    };
    SivuDtoLong: {
      sisalto: number[];
      /**
       * Format: int64
       * @example 30
       */
      maara: number;
      /**
       * Format: int32
       * @example 3
       */
      sivuja: number;
    };
    SivuDtoArtikkelinKommenttiDto: {
      sisalto: components['schemas']['ArtikkelinKommenttiDto'][];
      /**
       * Format: int64
       * @example 30
       */
      maara: number;
      /**
       * Format: int32
       * @example 3
       */
      sivuja: number;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  ohjaajaGet: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['OhjaajaCsrfDto'];
        };
      };
    };
  };
  ohjaajaUpdate: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['OhjaajaDto'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  ohjaajanSuosikkiFindAll: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SuosikkiDto'][];
        };
      };
    };
  };
  ohjaajanSuosikkiAdd: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['SuosikkiDto'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': string;
        };
      };
    };
  };
  ohjaajanSuosikkiDelete: {
    parameters: {
      query: {
        id: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  ohjaajanKiinnostusFindAll: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['KiinnostusDto'][];
        };
      };
    };
  };
  ohjaajanKiinnostusAdd: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['KiinnostusDto'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': string;
        };
      };
    };
  };
  ohjaajanKiinnostusDelete: {
    parameters: {
      query: {
        id: string;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  artikkelinKommenttiFindAllArtikkelinKommentit: {
    parameters: {
      query: {
        artikkeliId: number;
        sivu: number;
        koko: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SivuDtoArtikkelinKommenttiDto'];
        };
      };
    };
  };
  artikkelinKommenttiCreateArtikkelinKommentti: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['ArtikkelinKommenttiDto'];
      };
    };
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['ArtikkelinKommenttiDto'];
        };
      };
    };
  };
  artikkelinKommenttiIlmiannaKommentti: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  artikkelinKatseluAdd: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        artikkeliId: number;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  ohjaajaExport: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['OhjaajaExportDto'];
        };
      };
    };
  };
  artikkelinKatseluGetMostRecentViewedArtikkeliIds: {
    parameters: {
      query?: {
        koko?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SivuDtoLong'];
        };
      };
    };
  };
  artikkelinKatseluGetMostViewedArtikkeliIds: {
    parameters: {
      query?: {
        filterByArtikkeliIds?: number[];
        koko?: number;
      };
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['SivuDtoLong'];
        };
      };
    };
  };
  artikkelinKommenttiDeleteArtikkelinKommentti: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        id: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
